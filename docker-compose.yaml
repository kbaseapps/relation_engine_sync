version: '3'

# This docker-compose is for developer convenience, not for running in production.

services:

  # Python
  app:
    build:
      context: .
      args:
        DEVELOPMENT: 1
    network_mode: host
    depends_on:
      - kafka
      - re_api
      # - workspace
    volumes:
      - ${PWD}:/kb/module
    environment:
      - DEVELOPMENT=1
      - PYTHONUNBUFFERED=true
      - KBASE_SECURE_CONFIG_PARAM_RE_URL=http://localhost:5000
      - KBASE_SECURE_CONFIG_PARAM_WS_TOKEN=xyz
      - KBASE_SECURE_CONFIG_PARAM_RE_TOKEN=xyz
      - KBASE_SECURE_CONFIG_PARAM_WORKSPACE_URL=https://ci.kbase.us/services/ws

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: -Xmx512m -Xms512m

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:12888:13888

  # Relation Engine API
  re_api:
    image: kbase/relation_engine_api:latest
    depends_on:
      - arangodb
      # - auth
      # - workspace
    ports:
      - 5000:5000
    environment:
      - WORKERS=2
      - DEVELOPMENT=1
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - KBASE_AUTH_URL=https://ci.kbase.us/services/auth
      - KBASE_WORKSPACE_URL=https://ci.kbase.us/services/ws
      - PYTHONUNBUFFERED=true
      - SPEC_RELEASE_PATH=/app/src/test/spec_release/spec.tar.gz
      - DB_URL=http://arangodb:8529
      - DB_USER=root

  # Mock workspace server (see src/test/mock_workspace/endpoints.json)
  workspace:
    image: mockservices/mock_json_service:1.1
    volumes:
      - ${PWD}/src/test/mock_workspace:/config

  # A mock kbase auth server (see src/test/mock_auth/endpoints.json)
  auth:
    image: mockservices/mock_json_service
    volumes:
      - ${PWD}/test/mock_services/mock_auth:/config

  # Arangodb server in cluster mode
  arangodb:
    image: arangodb:3.4
    ports:
      - 8529:8529
    command: sh -c "arangodb create jwt-secret --secret=jwtSecret &&
                    arangodb --starter.local --auth.jwt-secret=./jwtSecret"
